<snippet>
	<content><![CDATA[
class ${1/(class\.|\.php)//g:$TM_FILENAME}
{
	/**
	 * @var ${1/(class\.|\.php)//g:$TM_FILENAME} The reference to *${1/(class\.|\.php)//g:$TM_FILENAME}* instance of this class
	 */
	private static \$instance;

	/**
	 * Returns the *${1/(class\.|\.php)//g:$TM_FILENAME}* instance of this class.
	 *
	 * @return ${1/(class\.|\.php)//g:$TM_FILENAME} The *${1/(class\.|\.php)//g:$TM_FILENAME}* instance.
	 */
	public static function getInstance() {
		if (null === static::\$instance) {
			static::\$instance = new static();
		}
		return static::\$instance;
	}

	${2:/**
	 * Protected constructor to prevent creating a new instance of the
	 * *${1/(class\.|\.php)//g:$TM_FILENAME}* via the `new` operator from outside of this class.
	 */}
	protected function __construct() {}

	${2:/**
	 * Private clone method to prevent cloning of the instance of the
	 * *${1/(class\.|\.php)//g:$TM_FILENAME}* instance.
	 *
	 * @return void
	 */}
	private function __clone() {}

	${2:/**
	 * Private unserialize method to prevent unserializing of the *${1/(class\.|\.php)//g:$TM_FILENAME}*
	 * instance.
	 *
	 * @return void
	 */}
	private function __wakeup() {}

	${0:// Work}
}

function ${1/(class\.|\.php)//g:$TM_FILENAME}() {
	return ${1/(class\.|\.php)//g:$TM_FILENAME}::getInstance();
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>singleton</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.php</scope>
</snippet>
